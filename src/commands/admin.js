import { getAllUsers, banUser, unbanUser } from '../db/users.js';
import { adminMiddleware } from '../middlewares/adminMiddleware.js';
import { getLog } from '../utils/logger.js';
import { log, error } from '../utils/logger.js';

export const handleListUsers = async (ctx) => {
  try {
    const users = await getAllUsers();
    
    if (!users || users.length === 0) {
      return ctx.reply('–ü–æ–∫–∞ –Ω–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.');
    }
    
    const userCount = users.length;
    let message = `–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${userCount}\n\n`;
    
    // List first 10 users with ID, name, and status
    const displayCount = Math.min(userCount, 10);
    for (let i = 0; i < displayCount; i++) {
      const user = users[i];
      const status = user.is_banned ? 'üî¥' : (user.is_free ? 'üü¢' : 'üü°');
      
      message += `${status} ID: ${user.id} | ${user.full_name} (@${user.username || '–Ω–µ—Ç_—é–∑–µ—Ä–Ω–µ–π–º–∞'}) | ${user.position} –≤ ${user.company}\n`;
    }
    
    if (userCount > 10) {
      message += `\n... –∏ –µ—â—ë ${userCount - 10} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.`;
    }
    
    return ctx.reply(message);
  } catch (err) {
    error('Error listing users', err);
    return ctx.reply(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${err.message}`);
  }
};

export const handleBanUser = async (ctx) => {
  const userId = ctx.message.text.split(' ')[1];
  
  if (!userId || isNaN(parseInt(userId))) {
    return ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /bad <id>');
  }
  
  try {
    await banUser(parseInt(userId));
    log(`Admin banned user ID: ${userId}`);
    return ctx.reply(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID ${userId} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.`);
  } catch (err) {
    error(`Error banning user ${userId}`, err);
    return ctx.reply(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${err.message}`);
  }
};

export const handleUnbanUser = async (ctx) => {
  const userId = ctx.message.text.split(' ')[1];
  
  if (!userId || isNaN(parseInt(userId))) {
    return ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /unban <id>');
  }
  
  try {
    await unbanUser(parseInt(userId));
    log(`Admin unbanned user ID: ${userId}`);
    return ctx.reply(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID ${userId} —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.`);
  } catch (err) {
    error(`Error unbanning user ${userId}`, err);
    return ctx.reply(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${err.message}`);
  }
};

export const handleGetLog = async (ctx) => {
  try {
    const logContent = getLog();
    
    // If log is too long, send only last 4000 characters
    const maxLength = 4000;
    const truncatedLog = logContent.length > maxLength 
      ? `...(–æ–±—Ä–µ–∑–∞–Ω–æ)...\n${logContent.slice(-maxLength)}` 
      : logContent;
    
    return ctx.reply(truncatedLog || '–õ–æ–≥ –ø—É—Å—Ç');
  } catch (err) {
    error('Error getting log', err);
    return ctx.reply(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ª–æ–≥–∞: ${err.message}`);
  }
};

export const handleHelp = async (ctx) => {
  const helpText = 
    '–ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\n' +
    '/match - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä—É—á–Ω–æ–π –ø–æ–¥–±–æ—Ä —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤\n' +
    '/alluser - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n' +
    '/bad <id> - –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID\n' +
    '/unban <id> - –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID\n' +
    '/log - –ü–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n' +
    '/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ';
  
  return ctx.reply(helpText);
};

export const setupAdminCommands = (bot) => {
  bot.command('alluser', adminMiddleware, handleListUsers);
  bot.command('bad', adminMiddleware, handleBanUser);
  bot.command('unban', adminMiddleware, handleUnbanUser);
  bot.command('log', adminMiddleware, handleGetLog);
  bot.command('help', adminMiddleware, handleHelp);
}; 